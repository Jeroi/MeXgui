#include "LanguageCodes.h"

//C# TO C++ CONVERTER TODO TASK: The .NET System namespace is not available from native C++:
//using namespace System;
//C# TO C++ CONVERTER TODO TASK: The .NET System namespace is not available from native C++:
//using namespace System::Collections::Generic;
//C# TO C++ CONVERTER TODO TASK: The .NET System namespace is not available from native C++:
//using namespace System::Text;
//C# TO C++ CONVERTER TODO TASK: The .NET System namespace is not available from native C++:
//using namespace System::Linq;

namespace BDInfo
{

	std::vector<KeyValuePair<std::string, std::string>*> LanguageCodes::GetTopLanguages()
	{
//C# TO C++ CONVERTER TODO TASK: Lambda expressions and anonymous methods are not converted to native C++ unless the option to convert to C++0x lambdas is selected:
	  return GetLanguages().Where(l => l->Key == "chi" || l->Key == "dut" || l->Key == "eng" || l->Key == "fin" || l->Key == "fre" || l->Key == "ger" || l->Key == "ita" || l->Key == "jpn" || l->Key == "nor" || l->Key == "por" || l->Key == "ita" || l->Key == "rus" || l->Key == "spa" || l->Key == "swe")->ToList();
	}

	std::vector<KeyValuePair<std::string, std::string>*> LanguageCodes::GetLanguages()
	{
	  //did not use dictionary in case of duplicates
	  std::vector<KeyValuePair<std::string, std::string>*> langs = std::vector<KeyValuePair<std::string, std::string>*>();
	  langs.push_back(new KeyValuePair<std::string, std::string>("abk", "Abkhazian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ace", "Achinese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ach", "Acoli"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ada", "Adangme"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("aar", "Afar"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("afh", "Afrihili"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("afr", "Afrikaans"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("afa", "Afro-Asiatic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("aka", "Akan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("akk", "Akkadian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("alb", "Albanian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sqi", "Albanian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ale", "Aleut"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("alg", "Algonquian languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tut", "Altaic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("amh", "Amharic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("apa", "Apache languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ara", "Arabic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("arc", "Aramaic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("arp", "Arapaho"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("arn", "Araucanian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("arw", "Arawak"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("arm", "Armenian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hye", "Armenian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("art", "Artificial (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("asm", "Assamese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ath", "Athapascan languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("aus", "Australian languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("map", "Austronesian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ava", "Avaric"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ave", "Avestan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("awa", "Awadhi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("aym", "Aymara"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("aze", "Azerbaijani"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ban", "Balinese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bat", "Baltic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bal", "Baluchi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bam", "Bambara"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bai", "Bamileke languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bad", "Banda"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bnt", "Bantu (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bas", "Basa"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bak", "Bashkir"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("baq", "Basque"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("eus", "Basque"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("btk", "Batak (Indonesia)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bej", "Beja"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bel", "Belarusian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bem", "Bemba"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ben", "Bengali"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ber", "Berber (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bho", "Bhojpuri"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bih", "Bihari"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bik", "Bikol"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bin", "Bini"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bis", "Bislama"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bos", "Bosnian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bra", "Braj"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bre", "Breton"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bug", "Buginese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bul", "Bulgarian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bua", "Buriat"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bur", "Burmese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mya", "Burmese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cad", "Caddo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("car", "Carib"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cat", "Catalan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cau", "Caucasian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ceb", "Cebuano"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cel", "Celtic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cai", "Central American Indian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chg", "Chagatai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cmc", "Chamic languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cha", "Chamorro"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("che", "Chechen"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chr", "Cherokee"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chy", "Cheyenne"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chb", "Chibcha"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chi", "Chinese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("zho", "Chinese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chn", "Chinook jargon"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chp", "Chipewyan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cho", "Choctaw"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chu", "Church Slavic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chk", "Chuukese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chv", "Chuvash"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cop", "Coptic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cor", "Cornish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cos", "Corsican"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cre", "Cree"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mus", "Creek"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("crp", "Creoles and pidgins (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cpe", "Creoles and pidgins,"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cpf", "Creoles and pidgins,"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cpp", "Creoles and pidgins,"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("scr", "Croatian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hrv", "Croatian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cus", "Cushitic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cze", "Czech"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ces", "Czech"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dak", "Dakota"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dan", "Danish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("day", "Dayak"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("del", "Delaware"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("din", "Dinka"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("div", "Divehi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("doi", "Dogri"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dgr", "Dogrib"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dra", "Dravidian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dua", "Duala"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dut", "Dutch"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nld", "Dutch"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dum", "Dutch, Middle (ca. 1050-1350)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dyu", "Dyula"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("dzo", "Dzongkha"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("efi", "Efik"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("egy", "Egyptian (Ancient)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("eka", "Ekajuk"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("elx", "Elamite"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("eng", "English"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("enm", "English, Middle (1100-1500)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ang", "English, Old (ca.450-1100)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("epo", "Esperanto"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("est", "Estonian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ewe", "Ewe"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ewo", "Ewondo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fan", "Fang"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fat", "Fanti"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fao", "Faroese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fij", "Fijian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fin", "Finnish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fiu", "Finno-Ugrian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fon", "Fon"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fre", "French"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fra", "French"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("frm", "French, Middle (ca.1400-1600)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fro", "French, Old (842-ca.1400)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fry", "Frisian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fur", "Friulian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ful", "Fulah"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gaa", "Ga"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("glg", "Gallegan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lug", "Ganda"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gay", "Gayo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gba", "Gbaya"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gez", "Geez"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("geo", "Georgian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kat", "Georgian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ger", "German"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("deu", "German"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nds", "Saxon"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gmh", "German, Middle High (ca.1050-1500)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("goh", "German, Old High (ca.750-1050)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gem", "Germanic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gil", "Gilbertese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gon", "Gondi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gor", "Gorontalo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("got", "Gothic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("grb", "Grebo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("grc", "Greek, Ancient (to 1453)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gre", "Greek"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ell", "Greek"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("grn", "Guarani"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("guj", "Gujarati"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gwi", "Gwich´in"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hai", "Haida"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hau", "Hausa"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("haw", "Hawaiian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("heb", "Hebrew"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("her", "Herero"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hil", "Hiligaynon"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("him", "Himachali"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hin", "Hindi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hmo", "Hiri Motu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hit", "Hittite"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hmn", "Hmong"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hun", "Hungarian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("hup", "Hupa"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("iba", "Iban"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ice", "Icelandic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("isl", "Icelandic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ibo", "Igbo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ijo", "Ijo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ilo", "Iloko"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("inc", "Indic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ine", "Indo-European (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ind", "Indonesian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ina", "Interlingua (International"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ile", "Interlingue"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("iku", "Inuktitut"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ipk", "Inupiaq"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ira", "Iranian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gle", "Irish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mga", "Irish, Middle (900-1200)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sga", "Irish, Old (to 900)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("iro", "Iroquoian languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ita", "Italian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("jpn", "Japanese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("jav", "Javanese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("jrb", "Judeo-Arabic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("jpr", "Judeo-Persian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kab", "Kabyle"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kac", "Kachin"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kal", "Kalaallisut"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kam", "Kamba"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kan", "Kannada"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kau", "Kanuri"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kaa", "Kara-Kalpak"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kar", "Karen"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kas", "Kashmiri"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kaw", "Kawi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kaz", "Kazakh"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kha", "Khasi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("khm", "Khmer"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("khi", "Khoisan (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kho", "Khotanese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kik", "Kikuyu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kmb", "Kimbundu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kin", "Kinyarwanda"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kir", "Kirghiz"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kom", "Komi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kon", "Kongo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kok", "Konkani"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kor", "Korean"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kos", "Kosraean"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kpe", "Kpelle"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kro", "Kru"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kua", "Kuanyama"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kum", "Kumyk"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kur", "Kurdish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kru", "Kurukh"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("kut", "Kutenai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lad", "Ladino"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lah", "Lahnda"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lam", "Lamba"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lao", "Lao"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lat", "Latin"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lav", "Latvian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ltz", "Letzeburgesch"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lez", "Lezghian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lin", "Lingala"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lit", "Lithuanian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("loz", "Lozi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lub", "Luba-Katanga"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lua", "Luba-Lulua"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lui", "Luiseno"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lun", "Lunda"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("luo", "Luo (Kenya and Tanzania)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lus", "Lushai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mac", "Macedonian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mkd", "Macedonian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mad", "Madurese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mag", "Magahi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mai", "Maithili"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mak", "Makasar"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mlg", "Malagasy"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("may", "Malay"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("msa", "Malay"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mal", "Malayalam"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mlt", "Maltese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mnc", "Manchu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mdr", "Mandar"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("man", "Mandingo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mni", "Manipuri"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mno", "Manobo languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("glv", "Manx"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mao", "Maori"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mri", "Maori"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mar", "Marathi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("chm", "Mari"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mah", "Marshall"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mwr", "Marwari"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mas", "Masai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("myn", "Mayan languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("men", "Mende"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mic", "Micmac"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("min", "Minangkabau"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mis", "Miscellaneous languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("moh", "Mohawk"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mol", "Moldavian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mkh", "Mon-Khmer (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("lol", "Mongo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mon", "Mongolian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mos", "Mossi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mul", "Multiple languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("mun", "Munda languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nah", "Nahuatl"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nau", "Nauru"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nav", "Navajo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nde", "Ndebele, North"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nbl", "Ndebele, South"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ndo", "Ndonga"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nep", "Nepali"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("new", "Newari"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nia", "Nias"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nic", "Niger-Kordofanian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ssa", "Nilo-Saharan (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("niu", "Niuean"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("non", "Norse, Old"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nai", "North American Indian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sme", "Northern Sami"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nor", "Norwegian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nob", "Norwegian Bokmål"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nno", "Norwegian Nynorsk"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nub", "Nubian languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nym", "Nyamwezi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nya", "Nyanja"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nyn", "Nyankole"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nyo", "Nyoro"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nzi", "Nzima"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("oci", "Occitan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("oji", "Ojibwa"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ori", "Oriya"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("orm", "Oromo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("osa", "Osage"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("oss", "Ossetian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("oto", "Otomian languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pal", "Pahlavi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pau", "Palauan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pli", "Pali"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pam", "Pampanga"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pag", "Pangasinan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pan", "Panjabi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pap", "Papiamento"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("paa", "Papuan (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("per", "Persian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("fas", "Persian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("peo", "Persian, Old (ca.600-400 B.C.)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("phi", "Philippine (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("phn", "Phoenician"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pon", "Pohnpeian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pol", "Polish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("por", "Portuguese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pra", "Prakrit languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pro", "Provençal"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("pus", "Pushto"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("que", "Quechua"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("roh", "Raeto-Romance"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("raj", "Rajasthani"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("rap", "Rapanui"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("rar", "Rarotongan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("roa", "Romance (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("rum", "Romanian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ron", "Romanian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("rom", "Romany"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("run", "Rundi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("rus", "Russian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sal", "Salishan languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sam", "Samaritan Aramaic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("smi", "Sami languages (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("smo", "Samoan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sad", "Sandawe"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sag", "Sango"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("san", "Sanskrit"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sat", "Santali"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("srd", "Sardinian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sas", "Sasak"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sco", "Scots"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("gla", "Gaelic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sel", "Selkup"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sem", "Semitic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("scc", "Serbian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("srp", "Serbian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("srr", "Serer"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("shn", "Shan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sna", "Shona"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sid", "Sidamo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sgn", "Sign languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bla", "Siksika"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("snd", "Sindhi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sin", "Sinhalese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sit", "Sino-Tibetan (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sio", "Siouan languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("den", "Slave (Athapascan)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sla", "Slavic (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("slo", "Slovak"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("slk", "Slovak"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("slv", "Slovenian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sog", "Sogdian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("som", "Somali"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("son", "Songhai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("snk", "Soninke"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("wen", "Sorbian languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("nso", "Sotho, Northern"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sot", "Sotho, Southern"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sai", "South American Indian (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("spa", "Spanish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("suk", "Sukuma"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sux", "Sumerian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sun", "Sundanese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sus", "Susu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("swa", "Swahili"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ssw", "Swati"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("swe", "Swedish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("syr", "Syriac"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tgl", "Tagalog"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tah", "Tahitian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tai", "Tai (Other)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tgk", "Tajik"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tmh", "Tamashek"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tam", "Tamil"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tat", "Tatar"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tel", "Telugu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ter", "Tereno"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tet", "Tetum"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tha", "Thai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tib", "Tibetan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("bod", "Tibetan"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tig", "Tigre"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tir", "Tigrinya"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tem", "Timne"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tiv", "Tiv"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tli", "Tlingit"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tpi", "Tok Pisin"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tkl", "Tokelau"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tog", "Tonga (Nyasa)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ton", "Tonga (Tonga Islands)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tsi", "Tsimshian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tso", "Tsonga"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tsn", "Tswana"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tum", "Tumbuka"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tur", "Turkish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ota", "Turkish, Ottoman (1500-1928)"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tuk", "Turkmen"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tvl", "Tuvalu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("tyv", "Tuvinian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("twi", "Twi"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("uga", "Ugaritic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("uig", "Uighur"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ukr", "Ukrainian"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("umb", "Umbundu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("und", "Undetermined"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("urd", "Urdu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("uzb", "Uzbek"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("vai", "Vai"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ven", "Venda"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("vie", "Vietnamese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("vol", "Volapük"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("vot", "Votic"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("wak", "Wakashan languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("wal", "Walamo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("war", "Waray"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("was", "Washo"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("wel", "Welsh"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("cym", "Welsh"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("wol", "Wolof"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("xho", "Xhosa"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("sah", "Yakut"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("yao", "Yao"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("yap", "Yapese"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("yid", "Yiddish"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("yor", "Yoruba"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("ypk", "Yupik languages"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("znd", "Zande"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("zap", "Zapotec"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("zen", "Zenaga"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("zha", "Zhuang"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("zul", "Zulu"));
	  langs.push_back(new KeyValuePair<std::string, std::string>("zun", "Zuni"));
	  return langs;
	}

	std::string LanguageCodes::GetName(const std::string &code)
	{
//C# TO C++ CONVERTER TODO TASK: Lambda expressions and anonymous methods are not converted to native C++ unless the option to convert to C++0x lambdas is selected:
	  return GetLanguages().Where(l => l->Key == code || l->Key == "und")->First()->Value;
	}
}
